---
# Logging into DNAnexus account
- name: Log in to DNAnexus account if dx_user_token is provided
  shell: source /opt/dx-toolkit/environment && dx login --token {{ item.dx_user_token if 'dx_user_token' in item else dx_token }} --noprojects
  become_user: "{{ item.username }}"
  args:
    executable: /bin/bash
  with_items: "{{ monitored_users }}"
  when: (dx_token is defined) or (item.dx_user_token is defined)

# Copy the necessary scripts for RUN directory monitoring
- name: Create the script directory for housing scripts
  file: path=/opt/dnanexus/scripts state=directory mode=0755

- name: Copy necessary scripts
  copy: src=../files/ dest=/opt/dnanexus/scripts

# Copy necessary config for storing local TAR location
- name: Create the script directory for housing scripts
  file: path=~/dnanexus/config state=directory mode=0755
  become_user: "{{ item.username }}"
  with_items: "{{ monitored_users }}"

- name: Copy necessary config to user's home directory
  template: src=../templates/monitor_run_config.template dest=~/dnanexus/config/monitor_runs.config
  become_user: "{{ item.username }}"
  with_items: "{{ monitored_users }}"

- stat: path=~/dnanexus/config/monitor_runs.config
  register: monitor_runs_config

# Create lock file
- name: Create lock file for CRON to wait on using flock
  file: path=/var/lock/dnanexus_uploader.lock state=touch

# Make sure required parameters are defined
- name: fail when project is not defined
  fail: msg="Project to upload to was not defined"
  when: upload_project is not defined

- name: fail when local folder to monitor (for RUN dirs) is not defined
  fail: msg="Local dir to monitor (for RUN dirs) is not defined"
  with_items: "{{ monitored_users }}"
  when: item.monitored_directories is not defined

- name: fail when both applet and workflow is specified (mutually exclusive)
  fail: msg="Both applet and workflow are specified (mutually exclusive)"
  with_items: "{{ monitored_users }}"
  when: (item.workflow is defined) and (item.applet is defined)

# Clean up CRON job in alternate mode
- name: delete deploy mode CRON job if debug mode set
  cron:
    name: "DNAnexus monitor runs (deploy)"
    user: "{{ item.username }}"
    state: absent
  with_items: "{{ monitored_users }}"
  when: mode == "debug"

# Set up CRON job for monitoring
- name: set up CRON job to run every minute in debug mode with downstream applet
  cron:
    name: "DNAnexus monitor runs (debug)"
    user: "{{ item.0.username }}"
    job: "flock -w 5 /var/lock/dnanexus_uploader.lock bash -ex -c 'source /opt/dx-toolkit/environment; PATH=/opt/dnanexus-upload-agent:$PATH; python /opt/dnanexus/scripts/monitor_runs.py -c ~/dnanexus/config/monitor_runs.config -p {{ upload_project }} -d {{ item.1 }} {{ -A if 'applet' in item.0 else '' }} {{ item.0.applet if 'applet' in item.0 else ''}} {{ '-w' if 'workflow' in item.0 else '' }} {{ item.0.workflow if 'workflow' in item.0 else ''}} {{ '-s' if 'script' in item.0 else '' }} {{ item.0.script if 'script' in item.0 else ''}} -v > ~/monitor.log 2>&1' > ~/dx-stream_cron.log 2>&1"
  with_subelements:
        - "{{ monitored_users }}"
        - monitored_directories
  when: mode == "debug"

- name: delete debug mode CRON job if deploy mode set
  cron: 
    name: "DNAnexus monitor runs (debug)"
    user: "{{ item.username }}"
    state: absent
  with_items: "{{ monitored_users }}"
  when: mode == "deploy"
  ignore_errors: yes

- name: set up CRON job to run every hour in deploy mode with downstream applet
  cron:
    name: "DNAnexus monitor runs (deploy)"
    special_time: hourly
    user: "{{ item.0.username }}"
    job: "flock -w 5 /var/lock/dnanexus_uploader.lock bash -ex -c 'source /opt/dx-toolkit/environment; PATH=/opt/dnanexus-upload-agent:$PATH; python /opt/dnanexus/scripts/monitor_runs.py -c ~/dnanexus/config/monitor_runs.config -p {{ upload_project }} -d {{ item.1 }} {{ -A if 'applet' in item.0 else '' }} {{ item.0.applet if 'applet' in item.0 else ''}} {{ '-w' if 'workflow' in item.0 else '' }} {{ item.0.workflow if 'workflow' in item.0 else ''}} {{ '-s' if 'script' in item.0 else '' }} {{ item.0.script if 'script' in item.0 else ''}} -v > ~/monitor.log 2>&1' > ~/dx-stream_cron.log 2>&1"
  with_subelements:
        - "{{ monitored_users }}"
        - monitored_directories
  when: mode == "deploy"
